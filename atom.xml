<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://51yun.github.io</id>
    <title>51cloud</title>
    <updated>2025-10-21T06:37:57.940Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://51yun.github.io"/>
    <link rel="self" href="https://51yun.github.io/atom.xml"/>
    <subtitle>云彩科技有限公司，是一家技术领先的企业级云服务商与上云解决方案提供商,官网 https://51cloud.cloud/</subtitle>
    <logo>https://51yun.github.io/images/avatar.png</logo>
    <icon>https://51yun.github.io/favicon.ico</icon>
    <rights>All rights reserved 2025, 51cloud</rights>
    <entry>
        <title type="html"><![CDATA[AWS EC2服务器绑定弹性ip]]></title>
        <id>https://51yun.github.io/post/aws-ec2-fu-wu-qi-bang-ding-dan-xing-ip/</id>
        <link href="https://51yun.github.io/post/aws-ec2-fu-wu-qi-bang-ding-dan-xing-ip/">
        </link>
        <updated>2025-10-21T06:28:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="aws-ec2服务器绑定弹性ip">AWS EC2服务器绑定弹性ip</h1>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/image-20251021142935927.png" alt="image-20251021142935927" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/image-20251021143004193.png" alt="image-20251021143004193" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/image-20251021143039498.png" alt="image-20251021143039498" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/image-20251021143140866.png" alt="image-20251021143140866" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://51yun.github.io/post-images/image-20251021143329994.png" alt="image-20251021143329994" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS创建EC2服务器]]></title>
        <id>https://51yun.github.io/post/aws-chuang-jian-ec2-fu-wu-qi/</id>
        <link href="https://51yun.github.io/post/aws-chuang-jian-ec2-fu-wu-qi/">
        </link>
        <updated>2025-10-21T06:05:02.000Z</updated>
        <content type="html"><![CDATA[<h1 id="注意事项">注意事项</h1>
<ul>
<li>亚马逊AWS云的EC2服务器 不支持密码ssh登录,默认仅支持 普通用户使用密钥文件登录,登录后使用sudo su - root 命令切换到root 再操作</li>
<li>密钥文件创建后浏览器会自动下载, 注意留存 丢失无法找回</li>
<li>不同操作系统的登录用户名不同,比如  centos操作系统用户名是centos  乌班图是ubuntu   debian是 admin , 还有些系统是 ec2-user 或者cloud-user</li>
</ul>
<h1 id="创建实例">创建实例</h1>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/image-20251021140525283.png" alt="image-20251021140525283" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/image-20251021140616645.png" alt="image-20251021140616645" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/image-20251021141053399.png" alt="image-20251021141053399" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/image-20251021141114970.png" alt="image-20251021141114970" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://51yun.github.io/post-images/image-20251021141416879.png" alt="image-20251021141416879" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://51yun.github.io/post-images/image-20251021141432542.png" alt="image-20251021141432542" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://51yun.github.io/post-images/image-20251021141527670.png" alt="image-20251021141527670" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://51yun.github.io/post-images/image-20251021141604332.png" alt="image-20251021141604332" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://51yun.github.io/post-images/image-20251021141702552.png" alt="image-20251021141702552" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://51yun.github.io/post-images/image-20251021141748854.png" alt="image-20251021141748854" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://51yun.github.io/post-images/image-20251021141842291.png" alt="image-20251021141842291" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://51yun.github.io/post-images/image-20251021141921294.png" alt="image-20251021141921294" loading="lazy"></figure>
<h3 id="这里可以自己添加安全组规则-图中演示的是-端口全开">这里可以自己添加安全组规则  图中演示的是 端口全开</h3>
<figure data-type="image" tabindex="13"><img src="https://51yun.github.io/post-images/image-20251021142013856.png" alt="image-20251021142013856" loading="lazy"></figure>
<h3 id="配置磁盘大小-也可以多个硬盘-就点添加新卷">配置磁盘大小  也可以多个硬盘 就点添加新卷</h3>
<figure data-type="image" tabindex="14"><img src="https://51yun.github.io/post-images/image-20251021142147158.png" alt="image-20251021142147158" loading="lazy"></figure>
<h1 id="绑定弹性ip">绑定弹性ip</h1>
<p><a href="https://51yun.github.io//post/aws-ec2-fu-wu-qi-bang-ding-dan-xing-ip/">参考文档</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudfront 跨域配置]]></title>
        <id>https://51yun.github.io/post/cloudfront-kua-yu-pei-zhi/</id>
        <link href="https://51yun.github.io/post/cloudfront-kua-yu-pei-zhi/">
        </link>
        <updated>2025-10-21T05:57:47.000Z</updated>
        <content type="html"><![CDATA[<p>1</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ CloudFront 静态页面托管]]></title>
        <id>https://51yun.github.io/post/cloudfront-jing-tai-ye-mian-tuo-guan/</id>
        <link href="https://51yun.github.io/post/cloudfront-jing-tai-ye-mian-tuo-guan/">
        </link>
        <updated>2025-10-21T05:42:23.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前提">前提</h1>
<ol>
<li>配置好s3 并上传静态资源 如果没配置好 参考---&gt;&gt; <a href="https://51yun.github.io/post/cloudfront-pei-he-s3-de-yuan-yong-lai-fang-wen-zi-yuan/">文档链接</a></li>
</ol>
<h2 id="配置静态托管">配置静态托管</h2>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/image-20251021134941241.png" alt="image-20251021134941241" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/image-20251021135025889.png" alt="image-20251021135025889" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/image-20251021135058923.png" alt="image-20251021135058923" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/image-20251021135405423.png" alt="image-20251021135405423" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CloudFront   WAF的速率规则配置]]></title>
        <id>https://51yun.github.io/post/waf-de-su-lu-gui-ze-pei-zhi/</id>
        <link href="https://51yun.github.io/post/waf-de-su-lu-gui-ze-pei-zhi/">
        </link>
        <updated>2025-10-14T08:17:09.000Z</updated>
        <content type="html"><![CDATA[<h1 id="注意事项">注意事项</h1>
<ol>
<li>此规则的目的是防御常规CC攻击</li>
<li>演示规则 是限制了每个ip 每分钟最多访问多少次,超过这个限制会被拉黑15分钟</li>
<li>被拉黑的ip 无法手动解除</li>
<li>演示规则 仅适合下载业务 和静态页面托管</li>
</ol>
<h1 id="创建规则">创建规则</h1>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/image-20251014163023689.png" alt="image-20251014163023689" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/image-20251014163105365.png" alt="image-20251014163105365" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/image-20251014163407602.png" alt="image-20251014163407602" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/image-20251014163422003.png" alt="image-20251014163422003" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://51yun.github.io/post-images/image-20251014163523733.png" alt="image-20251014163523733" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://51yun.github.io/post-images/image-20251014163533981.png" alt="image-20251014163533981" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://51yun.github.io/post-images/image-20251014163558306.png" alt="image-20251014163558306" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://51yun.github.io/post-images/image-20251014163716615.png" alt="image-20251014163716615" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://51yun.github.io/post-images/image-20251014164329440.png" alt="image-20251014164329440" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://51yun.github.io/post-images/image-20251014164128280.png" alt="image-20251014164128280" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://51yun.github.io/post-images/image-20251014164354257.png" alt="image-20251014164354257" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://51yun.github.io/post-images/image-20251014164405394.png" alt="image-20251014164405394" loading="lazy"></figure>
<figure data-type="image" tabindex="13"><img src="https://51yun.github.io/post-images/image-20251014164414917.png" alt="image-20251014164414917" loading="lazy"></figure>
<figure data-type="image" tabindex="14"><img src="https://51yun.github.io/post-images/image-20251014164424897.png" alt="image-20251014164424897" loading="lazy"></figure>
<p>效果如下</p>
<figure data-type="image" tabindex="15"><img src="https://51yun.github.io/post-images/image-20251014164511587.png" alt="image-20251014164511587" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CloudFront 配合S3的源 用来访问资源]]></title>
        <id>https://51yun.github.io/post/cloudfront-pei-he-s3-de-yuan-yong-lai-fang-wen-zi-yuan/</id>
        <link href="https://51yun.github.io/post/cloudfront-pei-he-s3-de-yuan-yong-lai-fang-wen-zi-yuan/">
        </link>
        <updated>2025-10-14T08:09:31.000Z</updated>
        <content type="html"><![CDATA[<h1 id="注意事项">注意事项</h1>
<ol>
<li>
<p>如果你没有创建桶 请参考此前文档 <a href="https://51yun.github.io/post/s3-tong-de-chuang-jian/#%E8%8E%B7%E5%8F%96%E8%AE%BF%E9%97%AE%E5%AF%86%E9%92%A5%E5%92%8C%E7%A7%98%E5%AF%86%E8%AE%BF%E9%97%AE%E5%AF%86%E9%92%A5">传送门</a></p>
</li>
<li>
<p>一定要配合waf规则来使用,以防被攻击者消耗流量,目前我们的客户严重的每小时上万刀,所以一定要注意</p>
</li>
<li>
<p>如果你还没创建waf规则 请先创建规则 参考此前文档 <a href="https://51yun.github.io/post/waf-de-su-lu-gui-ze-pei-zhi/">传送门</a></p>
</li>
</ol>
<h1 id="创建分配">创建分配</h1>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/image-20251014170022761.png" alt="image-20251014170022761" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/image-20251014170059639.png" alt="image-20251014170059639" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/image-20251014170124600.png" alt="image-20251014170124600" loading="lazy"></figure>
<h3 id="如果没出现上面的蓝色提示-点这里-传送门">如果没出现上面的蓝色提示 点这里 <a href="https://us-east-1.console.aws.amazon.com/cloudfront/v4/home?region=us-east-1#/distributions/create?mode=legacy">传送门</a></h3>
<hr>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/image-20251014170543977.png" alt="image-20251014170543977" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://51yun.github.io/post-images/image-20251014170439048.png" alt="image-20251014170439048" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://51yun.github.io/post-images/image-20251014170710852.png" alt="image-20251014170710852" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://51yun.github.io/post-images/image-20251014170754651.png" alt="image-20251014170754651" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://51yun.github.io/post-images/image-20251014170931875.png" alt="image-20251014170931875" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://51yun.github.io/post-images/image-20251014171002886.png" alt="image-20251014171002886" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://51yun.github.io/post-images/image-20251014171134367.png" alt="image-20251014171134367" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://51yun.github.io/post-images/image-20251014171151779.png" alt="image-20251014171151779" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://51yun.github.io/post-images/image-20251014171258257.png" alt="image-20251014171258257" loading="lazy"></figure>
<p>到此已经得到了分配域名</p>
<h1 id="分配域名的使用方法">分配域名的使用方法</h1>
<p>如 你的分配域名 是   d2oa6e41q2nbq9.cloudfront.net  你桶中根目录下的文件是 123.jar</p>
<p>那么访问这个文件 就是  https://d2oa6e41q2nbq9.cloudfront.net/123.jar</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[S3 桶的创建]]></title>
        <id>https://51yun.github.io/post/s3-tong-de-chuang-jian/</id>
        <link href="https://51yun.github.io/post/s3-tong-de-chuang-jian/">
        </link>
        <updated>2025-10-14T07:34:10.000Z</updated>
        <content type="html"><![CDATA[<h1 id="注意事项">注意事项</h1>
<ul>
<li>不要泄露桶名称 以及 区域 ,攻击者会通过这两个信息拼凑出你的桶地址 用来攻击</li>
<li>不要泄露 访问密钥 和 秘密访问密钥 ,攻击者可能通过这些信息控制你的aws账号,如创建无数个服务器或者其他实例消耗你的费用</li>
<li>不要关闭 阻止公共访问,因为公共访问无法添加防御,攻击者会通过僵尸网络大量频繁的下载你的资源达到消耗你的流量产生流量费用的情况,目前我们遇到过严重的 一小时消耗上万刀</li>
<li>如需访问请使用cloudfront 也就是 亚马逊的cdn 并关联waf规则的防御手段 来访问</li>
</ul>
<h1 id="创建桶">创建桶</h1>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/image-20251014154202022.png" alt="image-20251014154202022" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/image-20251014154317453.png" alt="image-20251014154317453" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/image-20251014154410055.png" alt="image-20251014154410055" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/image-20251014154457713.png" alt="image-20251014154457713" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://51yun.github.io/post-images/image-20251014154602706.png" alt="image-20251014154602706" loading="lazy"></figure>
<h1 id="手动上传文件">手动上传文件</h1>
<h3 id="点进去需要操作的桶">点进去需要操作的桶</h3>
<figure data-type="image" tabindex="6"><img src="https://51yun.github.io/post-images/image-20251014154643574.png" alt="image-20251014154643574" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://51yun.github.io/post-images/image-20251014154833622.png" alt="image-20251014154833622" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://51yun.github.io/post-images/image-20251014154911445.png" alt="image-20251014154911445" loading="lazy"></figure>
<h1 id="代码和程序上传">代码和程序上传</h1>
<h3 id="获取访问密钥和秘密访问密钥">获取访问密钥和秘密访问密钥</h3>
<figure data-type="image" tabindex="9"><img src="https://51yun.github.io/post-images/image-20251014155237091.png" alt="image-20251014155237091" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://51yun.github.io/post-images/image-20251014155259934.png" alt="image-20251014155259934" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://51yun.github.io/post-images/image-20251014155330609.png" alt="image-20251014155330609" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://51yun.github.io/post-images/image-20251014155415268.png" alt="image-20251014155415268" loading="lazy"></figure>
<figure data-type="image" tabindex="13"><img src="https://51yun.github.io/post-images/image-20251014155431508.png" alt="image-20251014155431508" loading="lazy"></figure>
<figure data-type="image" tabindex="14"><img src="https://51yun.github.io/post-images/image-20251014155531943.png" alt="image-20251014155531943" loading="lazy"></figure>
<h3 id="注意事项-2">注意事项</h3>
<ul>
<li>如果你的程序不能上传文件,那么有一种可能你需要考虑 那就是代码中的sdk是否是官方的sdk,代码是否遵循了官方的演示代码,官方文档链接参考 <a href="https://docs.aws.amazon.com/zh_cn/sdk-for-java/v1/developer-guide/examples-s3-objects.html#upload-object"><strong>Amazon S3 对象执行操作</strong></a></li>
<li>代码和程序操作S3桶 只需要 四个必要信息  1 访问密钥  2 秘密访问密钥 3 区域代码  4 桶名称 其他的信息不影响桶的操作</li>
<li>区域代码获取 在桶列表中可以看到,AWS 区域一列中 英文部分就是,  找不到点  <a href="https://ap-southeast-1.console.aws.amazon.com/s3/buckets?region=ap-southeast-1&amp;bucketType=general">链接</a></li>
<li><img src="https://51yun.github.io/post-images/image-20251014160325442.png" alt="image-20251014160325442" loading="lazy"></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS EC2服务器磁盘扩容]]></title>
        <id>https://51yun.github.io/post/aws-ec2-fu-wu-qi-ci-pan-kuo-rong/</id>
        <link href="https://51yun.github.io/post/aws-ec2-fu-wu-qi-ci-pan-kuo-rong/">
        </link>
        <updated>2025-10-08T08:16:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="注意事项">注意事项</h3>
<ul>
<li>服务器无需关机或重启 服务器无需关机或重启 服务器无需关机或重启 重要的事情说三遍</li>
<li>操作前建议先备份数据有数据丢失风险</li>
<li>如果你现在的实例类型是带有D字母的 比如 c5d,请检查下是否使用的是自带的nvme磁盘 如果是请不要关机并且立即备份数据,  nvme磁盘不能作为持久盘 关机后大概率会数据丢失</li>
</ul>
<h3 id="1-修改ebs卷大小">1 修改EBS卷大小</h3>
<p>找到卷并点进去</p>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/image-20251008162522985.png" alt="image-20251008162522985" loading="lazy"></figure>
<p>修改卷大小</p>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/image-20251008162611857.png" alt="image-20251008162611857" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/image-20251008162634093.png" alt="image-20251008162634093" loading="lazy"></figure>
<h3 id="2-更新系统中-文件系统-使得磁盘大小生效">2 更新系统中 文件系统 使得磁盘大小生效</h3>
<p>如有分区请参考官方文档: <a href="https://docs.aws.amazon.com/zh_cn/ebs/latest/userguide/recognize-expanded-volume-linux.html"><strong>EBS 卷大小后扩展文件系统</strong></a></p>
<p>下面演示无分区情况的linux 操作</p>
<pre><code class="language-shell">#在以下示例输出中，根卷（nvme0n1）有两个分区（nvme0n1p1 和 nvme0n1p128），而额外的卷（nvme1n1）没有分区。我们扩容没有分区的卷

[ec2-user ~]$ sudo lsblk
NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
nvme1n1       259:0    0  30G  0 disk /data
nvme0n1       259:1    0  16G  0 disk
└─nvme0n1p1   259:2    0   8G  0 part /
└─nvme0n1p128 259:3    0   1M  0 part


#nvme1n1 和 nvme0n1 是两个卷的名称 其中nvme0n1 有两个分区
#而 nvme0n1p1  nvme0n1p128 是分区名称和编号  分别是1 和128 
#下面扩容 没有分区的nvme1n1 
</code></pre>
<p>下面开始扩容文件系统到没有分区的卷</p>
<p>1 查看文件系统名称 和格式还有挂在路径</p>
<pre><code class="language-shell">[ec2-user ~]$ df -hT
Filesystem      Type  Size  Used Avail Use% Mounted on 
/dev/nvme0n1p1  xfs   8.0G  1.6G  6.5G  20% / 
/dev/nvme1n1    xfs   8.0G   33M  8.0G   1% /data
#Filesystem 一列 为文件系统名称
#Type 一列为 文件系统格式
#最后面一列为 挂在路径
</code></pre>
<p>2 XFS 文件系统使用下面方法</p>
<pre><code class="language-shell">[ec2-user ~]$ ``sudo xfs_growfs -d /date
#注意 /date 是挂载路径  如果此时你扩容的是系统盘 那么就是 /
</code></pre>
<p>3 Ext4 文件系统</p>
<pre><code class="language-shell">[ec2-user ~]$ ``sudo resize2fs /dev/nvme1n1 
#/dev/nvme1n1  为文件系统名称 
</code></pre>
<p>4 验证是否与修改后的卷大小相同</p>
<pre><code class="language-shell">[ec2-user ~]$ df -hT
Filesystem      Type  Size    Used   Avail  Use%  Mounted on 
/dev/nvme0n1p1  xfs   8.0G    1.6G   6.5G    20%  / 
/dev/nvme1n1    xfs   100.0G   33M   100.0G   1%  /data
#此处发现 /dev/nvme1n1 已经变为100g 说明已经成功了
</code></pre>
<h3 id="最后我还要重新说一下-所有操作的前提下-建议都要提前备份数据">最后我还要重新说一下 所有操作的前提下 建议都要提前备份数据</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[谷歌虚拟机 更换IP]]></title>
        <id>https://51yun.github.io/post/gu-ge-xu-ni-ji-geng-huan-ip/</id>
        <link href="https://51yun.github.io/post/gu-ge-xu-ni-ji-geng-huan-ip/">
        </link>
        <updated>2025-10-06T07:00:41.000Z</updated>
        <content type="html"><![CDATA[<p>先登陆谷歌控制台，进入要更换Ip的服务器</p>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/file0001-1759734166527-1.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/file0002-1759734166527-2.png" alt="img" loading="lazy"></figure>
<p>以下外部IPv4地址，默认是临时就点下面的创建IP地址输入名称后，保存即可。如果之前已是静态Ip，这里选择临时保存即可。</p>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/file0003.png" alt="img" loading="lazy"></figure>
<p>点下面的保存后等会就会有新IP出现。</p>
<p>以下是如何删除没用的静态IP：</p>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/file0004.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://51yun.github.io/post-images/file0005.png" alt="img" loading="lazy"></figure>
<p>静态IP不用了记得删除，不删除会扣费</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[谷歌GCP云 创建虚拟机实例]]></title>
        <id>https://51yun.github.io/post/gu-ge-gcp-yun-chuang-jian-xu-ni-ji-shi-li/</id>
        <link href="https://51yun.github.io/post/gu-ge-gcp-yun-chuang-jian-xu-ni-ji-shi-li/">
        </link>
        <updated>2025-10-06T06:54:48.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<h5 id="首先是能访问海外网站的电脑上要能成功登陆所授权的gmail邮箱">首先是能访问海外网站的电脑上要能成功登陆所授权的gmail邮箱：</h5>
</li>
<li>
<h5 id="通过点击专属链接登入gcp云平台">通过点击专属链接登入GCP云平台：</h5>
</li>
<li>
<h5 id="创建vm实例">创建VM实例：</h5>
</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://51yun.github.io/post-images/file0001.png" alt="img" loading="lazy"></figure>
<h5 id="a在左侧的菜单中找到-compute-engine-虚拟机-虚拟机实例-创建vm实例">a在左侧的菜单中找到 Compute Engine –虚拟机-虚拟机实例-创建VM实例</h5>
<h5 id="b通过创建实例或者单击加号来创建一个虚拟机">b通过<code>创建实例</code>或者单击加号来创建一个虚拟机。</h5>
<h5 id="名称随意输入机器名称">·     名称：随意输入，机器名称</h5>
<h5 id="区域建议新加坡asia-southeast-b">·     区域：建议新加坡asia-southeast-b</h5>
<h5 id="机器配置通用系列-e2-medium2-vcpu-4gb-ram">·     机器配置：通用系列 – E2-medium(2 vCPU, 4GB RAM)</h5>
<h5 id="启动磁盘单击更改-centos-7">·     启动磁盘单击更改 – <em><strong>*CentOS 7*</strong></em></h5>
<h5 id="防火墙允许http流量允许https流量一定记得勾选">·     <em><strong>*防火墙：允许HTTP流量，允许HTTPS流量（一定记得勾选）*</strong></em></h5>
<figure data-type="image" tabindex="2"><img src="https://51yun.github.io/post-images/file0001-1759733841553-2.png" alt="img" loading="lazy"></figure>
<p>默认是E2系列的机器，如果对于CPU要求性能高些，可选N2系列</p>
<figure data-type="image" tabindex="3"><img src="https://51yun.github.io/post-images/file0002.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://51yun.github.io/post-images/file0001-1759733849403-5.png" alt="img" loading="lazy"></figure>
<p>修改系统为cenots7,ubuntu也是同样方法</p>
<figure data-type="image" tabindex="5"><img src="https://51yun.github.io/post-images/file0001-1759733862639-8.png" alt="img" loading="lazy"></figure>
<p>点创建稍等30秒VM就好了</p>
<p>Google Compute Engine(GCE)VM实例列表中新建好VM后，在我们想要开启root用户密码登录的VM实例列中的“SSH”菜单选项下，选择“在浏览器窗口中打开”。</p>
<figure data-type="image" tabindex="6"><img src="https://51yun.github.io/post-images/file0002-1759733862639-7.png" alt="img" loading="lazy"></figure>
<p>注：如果本地用代理方式访问谷歌：会有如下图所示：</p>
<figure data-type="image" tabindex="7"><img src="https://51yun.github.io/post-images/image-20251006145750369.png" alt="image-20251006145750369" loading="lazy"></figure>
<p>点“在不使用Cloud Identity-Aware Proxy的情况下重试”链接稍等就可以.</p>
<p>然后使用sudo -i命令提升用户权限，切换为root用户。</p>
<pre><code class="language-shell">sudo su - root
</code></pre>
<p>Centos,ubuntu等系统然后编辑系统配置文件sshd_config</p>
<pre><code class="language-shell">vi /etc/ssh/sshd_config
</code></pre>
<p>进入编辑模式，输入法切换为英文按“i”进入编辑修改模式。</p>
<p>修改其中信息</p>
<pre><code class="language-shell"># Authenticat ion:
PermitRootLogin yes //把默认的no，改为yes
</code></pre>
<p>在往下翻</p>
<pre><code># To di sable tunne led clear text pas swords, change to no here! 
PasswordAuthentication yes  //把默认的no，改为yes
</code></pre>
<p>然后按“esc”，输入“:wq”进行编辑保存。</p>
]]></content>
    </entry>
</feed>